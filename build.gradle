plugins {
    id("java")
    id("java-library")
    id("io.freefair.lombok") version "${lombokPluginVersion}"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //implementation fileTree(dir: '~/casper/casper-java-sdk/build/libs', include: '*.jar')
    implementation "network.casper:casper-java-sdk:${casperSdkVersion}"
    implementation "dev.oak3:sbs4j:${sbs4jVersion}"
    implementation "io.github.oak:jsonrpc4j:${jsonrpc4jVersion}"
    implementation "com.syntifi.crypto:crypto-key-common:${cryptokeyVersion}"
    implementation "com.syntifi.crypto:crypto-key-ed25519:${cryptokeyVersion}"
    implementation "com.syntifi.crypto:crypto-key-secp256k1:${cryptokeyVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "org.javatuples:javatuples:${javaTuplesVersion}"
    implementation "joda-time:joda-time:${jodaTimeVersion}"
    implementation "org.apache.cxf:cxf-rt-rs-client:${cxfRtRsSseVersion}"
    implementation "org.apache.cxf:cxf-rt-rs-sse:${cxfRtRsSseVersion}"

    compileOnly "org.slf4j:slf4j-api:${slf4jApiVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${jupiterVersion}"

    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${jupiterVersion}"
    testImplementation files('assets')
    testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
    testImplementation "com.jayway.jsonpath:json-path-assert:${jsonPathAssertVersion}"
    // Used to compare json strings while testing
    testImplementation "org.skyscreamer:jsonassert:${jsonassertVersion}"
    testImplementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}


task cucumberCli(type: JavaExec) {
    ext.cucumber_name = System.getProperty('cucumber.name')
    if (ext.cucumber_name == null) {
        ext.cucumber_name = ''
    }
    println 'ext.cucumber_name=' + ext.cucumber_name

    ext.cucumber_feature = System.getProperty('cucumber.feature')
    if (ext.cucumber_feature == null) {
        ext.cucumber_feature = ''
    }
    println 'ext.cucumber_feature=' + ext.cucumber_feature

    //  dependsOn assemble, testClasses
    mainClass = "io.cucumber.core.cli.Main"
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    args = [
            // '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
            '--plugin', 'pretty',
            '--plugin', 'html:reports/cucumber-report.html',
            '--plugin', 'junit:reports/cucumber-report.xml',
            '--plugin', 'json:reports/cucumber-report.json',
            '--glue', 'com.stormeye.steps',
            '--glue', 'com.casper.sdk',
            '--name', ext.cucumber_name,
            "src/test/resources/features/${ext.cucumber_feature}"
    ]
}

test {

    useJUnitPlatform()
    finalizedBy cucumberCli
}
